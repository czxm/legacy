package com.intel.ca360.loadmeter.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.intel.ca360.loadmeter.SummaryData;
import com.intel.cedar.feature.Environment;
import com.intel.cedar.storage.IFile;

public class ReportGenerator {
	private static SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
	private String summary = "";
	private String summaryFragment = "";
	private List<String> details = new ArrayList<String>();
	private List<String> detailsFragment = new ArrayList<String>();
	private Environment env;

	public ReportGenerator(Environment env){
		this.env = env;
	}
	
	public void genReport(String file) throws Exception{
		ByteArrayOutputStream ous = new ByteArrayOutputStream();
		FileUtils.copyStream(ReportGenerator.class.getResourceAsStream("report.tpl"), ous);
		String content = ous.toString();
		StringBuilder sb = new StringBuilder();
		sb.append(summary);
		for(String d : details){
			sb.append(d);
		}
        sb.append(String.format("<H5>Generated by LoadMeter (%s)</H5>", format.format(new Date())));
        FileOutputStream fos = new FileOutputStream(file);
        FileUtils.copyStream(new ByteArrayInputStream(content.replace("$CONTENT$", sb.toString()).getBytes()), fos);
        fos.close();
        
        if(env != null){
        	StringBuilder sbFragment = new StringBuilder();
        	sbFragment.append(summaryFragment);
    		for(String d : detailsFragment){
    			sbFragment.append(d);
    		}
        	fos = new FileOutputStream("summary.fragment");
    		FileUtils.copyStream(new ByteArrayInputStream(sbFragment.toString().getBytes()), fos);
    		fos.close();
        }
	}
	
	public void setSummaryFragment(List<String> charts, String[] header, List<SummaryData> dataList){
		StringBuilder sb = new StringBuilder();
		sb.append("<H1>Summary</H1>");
		sb.append("<TABLE id=details width=\"100%\">");
		sb.append("<TBODY><TR>");
		for(String s : header){
			sb.append("<TH>");
			sb.append(s);
			sb.append("</TH>");
		}
		sb.append("</TR>");
		for(SummaryData d : dataList){
			sb.append("<TR>");
			sb.append(d.toHTMLString());
			sb.append("</TR>");
		}
		sb.append("</TBODY></TABLE>");
		for(String chart : charts){
			sb.append(String.format("<IMG SRC=\"%s\"/>", getHyperLink(chart)));
			sb.append("<HR>");
		}
		sb.append("<BR>");
		summaryFragment = sb.toString();		
	}
	
	public void setSummary(List<String> charts, String[] header, List<SummaryData> dataList){
		StringBuilder sb = new StringBuilder();
		sb.append("<H1>Summary</H1>");
		sb.append("<TABLE id=details width=\"100%\">");
		sb.append("<TBODY><TR>");
		if(header != null){
			for(String s : header){
				sb.append("<TH>");
				sb.append(s);
				sb.append("</TH>");
			}
		}
		sb.append("</TR>");
		for(SummaryData d : dataList){
			sb.append("<TR>");
			sb.append(d.toHTMLString());
			sb.append("</TR>");
		}
		sb.append("</TBODY></TABLE>");
		for(String chart : charts){
			sb.append(String.format("<IMG SRC=\"%s\"/>", chart));
			sb.append("<HR>");
		}
		sb.append("<BR>");
		summary = sb.toString();
		
		if(env != null){
			setSummaryFragment(charts, header, dataList);
		}
	}
	
	public void addDetailForFragment(List<String> charts, String file){
		StringBuilder sb = new StringBuilder();
		int index = file.lastIndexOf(".");
		sb.append(String.format("<H1>Charts for <A HREF=\"%s\">%s</A></H1>", getHyperLink(file), index > 0 ? file.substring(0, index) : file));
		for(String chart : charts){
			sb.append(String.format("<IMG SRC=\"%s\"/>", getHyperLink(chart)));
			sb.append("<HR>");
		}
		sb.append("<BR>");
		detailsFragment.add(sb.toString());		
	}

	public void addDetail(List<String> charts, String file){
		StringBuilder sb = new StringBuilder();
		int index = file.lastIndexOf(".");
		sb.append(String.format("<H1>Charts for <A HREF=\"%s\">%s</A></H1>", file, index > 0 ? file.substring(0, index) : file));
		for(String chart : charts){
			sb.append(String.format("<IMG SRC=\"%s\"/>", chart));
			sb.append("<HR>");
		}
		sb.append("<BR>");
		details.add(sb.toString());
		
		if(env != null){
			addDetailForFragment(charts, file);
		}
	}
	
	private String getHyperLink(String file){
		if(env != null){
			IFile f = env.getStorageRoot().getFile(file);
			return env.getHyperlink(f);
		}
		else{
			return file;
		}
	}
}
